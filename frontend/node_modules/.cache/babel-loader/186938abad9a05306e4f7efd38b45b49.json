{"ast":null,"code":"var _jsxFileName = \"E:\\\\file project\\\\OJT\\\\TodoNew-Frontend\\\\frontend\\\\frontend\\\\src\\\\components\\\\registerComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../Redux/actions/authAction';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = ({\n  dispatchRegisterAction\n}) => {\n  _s();\n\n  const [fullName, setFullName] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState({\n    fullName: false,\n    username: false,\n    email: false,\n    password: false\n  });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(fullName, username, email, password);\n    dispatchRegisterAction(fullName, username, email, password, () => toast.success('berhasil membuat akun'), message => toast.error(`Error : ${message}`));\n  };\n\n  const makeValidate = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fullName\",\n            className: \"form-label\",\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"fullName\",\n            id: \"fullName\",\n            placeholder: \"urname\",\n            value: fullName,\n            onChange: e => setFullName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            className: \"form-label\",\n            children: \"User Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"username\",\n            id: \"username\",\n            placeholder: \"user name\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-label\",\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            name: \"email\",\n            id: \"email\",\n            placeholder: \"name@example.com\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"form-label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            name: \"password\",\n            id: \"password\",\n            placeholder: \"your password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n};\n\n_s(RegisterForm, \"GbEla0qcaJ5wUBYtyE76LrnBkkg=\");\n\n_c = RegisterForm;\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchRegisterAction: (username, fullName, email, password, onSuccess, onError) => {\n    dispatch(registerUser({\n      username,\n      fullName,\n      email,\n      password\n    }, onSuccess, onError));\n  }\n});\n\nexport default connect(null, mapDispatchToProps)(RegisterForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["E:/file project/OJT/TodoNew-Frontend/frontend/frontend/src/components/registerComponent.js"],"names":["React","useState","connect","registerUser","toast","RegisterForm","dispatchRegisterAction","fullName","setFullName","username","setUsername","email","setEmail","password","setPassword","error","setError","handleSubmit","event","preventDefault","console","log","success","message","makeValidate","e","target","value","mapDispatchToProps","dispatch","onSuccess","onError"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {registerUser} from '../Redux/actions/authAction';\r\nimport {toast} from 'react-toastify';\r\n\r\nconst RegisterForm = ({ dispatchRegisterAction }) => {\r\n\r\n    const [fullName, setFullName] = useState('')\r\n    const [username, setUsername] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState({fullName: false, username: false, email: false, password: false})\r\n\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      console.log(fullName, username, email, password)\r\n      dispatchRegisterAction(fullName, username, email, password,  \r\n        () => toast.success('berhasil membuat akun'), \r\n        (message) => toast.error(`Error : ${message}`));\r\n    };\r\n\r\n    const makeValidate = () => {\r\n      \r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <React.Fragment>\r\n          <form noValidate onSubmit={handleSubmit}>\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"fullName\" className=\"form-label\">\r\n              Full Name\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"fullName\"\r\n              id=\"fullName\"\r\n              placeholder=\"urname\"\r\n              value={fullName}\r\n              onChange = {(e) => setFullName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"username\" className=\"form-label\">\r\n              User Name\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"username\"\r\n              id=\"username\"\r\n              placeholder=\"user name\"\r\n              value={username}\r\n              onChange = {(e) => setUsername(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"email\" className=\"form-label\">\r\n              Email address\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              placeholder=\"name@example.com\"\r\n              value={email}\r\n              onChange = {(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"password\" className=\"form-label\">\r\n              Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"your password\"\r\n              value={password}\r\n              onChange = {(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <button type=\"submit\">\r\n            Register\r\n          </button>\r\n          </form>\r\n         \r\n        </React.Fragment>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  dispatchRegisterAction : (username, fullName, email, password, onSuccess, onError) => {\r\n    dispatch(registerUser({username, fullName, email, password}, onSuccess, onError))\r\n  }\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterForm);"]},"metadata":{},"sourceType":"module"}