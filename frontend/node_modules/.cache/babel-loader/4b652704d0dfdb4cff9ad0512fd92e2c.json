{"ast":null,"code":"import axios from 'axios';\nimport * as constants from './constant';\nimport { logoutUser } from './actions/authAction';\nexport const apiMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  if (action.type !== constants.API) return next(action);\n  dispatch({\n    type: constants.LOADER\n  });\n  const BASE_URL = 'http://localhost:5000';\n  const AUTH_TOKEN = getState().user.token;\n  const {\n    url,\n    method,\n    success,\n    data,\n    postProcessSuccess,\n    postProcessError\n  } = action.payload;\n  axios({\n    method,\n    url: BASE_URL + url,\n    data: data ? data : null\n  }).then(response => {\n    dispatch({\n      type: constants.LOADER\n    });\n    if (success) dispatch(success(response.data));\n    if (postProcessSuccess) postProcessSuccess(response.data);\n  }).catch(err => {\n    dispatch({\n      type: constants.LOADER\n    });\n    if (!err.response) console.warn(err);else {\n      if (err.response.data.error.message) {\n        if (postProcessError) postProcessError(err.response.data.error.message);\n      }\n    }\n  });\n};","map":{"version":3,"sources":["E:/file project/OJT/TodoNew-Frontend/frontend/src/Redux/middleware.js"],"names":["axios","constants","logoutUser","apiMiddleware","dispatch","getState","next","action","type","API","LOADER","BASE_URL","AUTH_TOKEN","user","token","url","method","success","data","postProcessSuccess","postProcessError","payload","then","response","catch","err","console","warn","error","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,SAAQC,UAAR,QAAyB,sBAAzB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAA0BC,IAAI,IAAIC,MAAM,IAAI;AACrE,MAAIA,MAAM,CAACC,IAAP,KAAgBP,SAAS,CAACQ,GAA9B,EAAmC,OAAOH,IAAI,CAACC,MAAD,CAAX;AAEnCH,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAEP,SAAS,CAACS;AAAlB,GAAD,CAAR;AACA,QAAOC,QAAQ,GAAG,uBAAlB;AACA,QAAMC,UAAU,GAAGP,QAAQ,GAAGQ,IAAX,CAAgBC,KAAnC;AACA,QAAM;AAACC,IAAAA,GAAD;AAAMC,IAAAA,MAAN;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA,IAAvB;AAA6BC,IAAAA,kBAA7B;AAAiDC,IAAAA;AAAjD,MACNb,MAAM,CAACc,OADP;AAGArB,EAAAA,KAAK,CAAC;AACFgB,IAAAA,MADE;AAEFD,IAAAA,GAAG,EAAEJ,QAAQ,GAAGI,GAFd;AAGFG,IAAAA,IAAI,EAAEA,IAAI,GAAGA,IAAH,GAAU;AAHlB,GAAD,CAAL,CAIGI,IAJH,CAISC,QAAD,IAAc;AAClBnB,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEP,SAAS,CAACS;AAAlB,KAAD,CAAR;AACA,QAAGO,OAAH,EAAYb,QAAQ,CAACa,OAAO,CAACM,QAAQ,CAACL,IAAV,CAAR,CAAR;AACZ,QAAGC,kBAAH,EAAuBA,kBAAkB,CAACI,QAAQ,CAACL,IAAV,CAAlB;AAC1B,GARD,EAQGM,KARH,CAQSC,GAAG,IAAI;AACZrB,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEP,SAAS,CAACS;AAAlB,KAAD,CAAR;AACA,QAAG,CAACe,GAAG,CAACF,QAAR,EAAkBG,OAAO,CAACC,IAAR,CAAaF,GAAb,EAAlB,KACI;AACA,UAAIA,GAAG,CAACF,QAAJ,CAAaL,IAAb,CAAkBU,KAAlB,CAAwBC,OAA5B,EAAoC;AAChC,YAAGT,gBAAH,EAAqBA,gBAAgB,CAACK,GAAG,CAACF,QAAJ,CAAaL,IAAb,CAAkBU,KAAlB,CAAwBC,OAAzB,CAAhB;AACxB;AACJ;AACJ,GAhBD;AAiBH,CA1BM","sourcesContent":["import axios from 'axios';\r\n\r\nimport * as constants from './constant';\r\nimport {logoutUser} from './actions/authAction';\r\n\r\nexport const apiMiddleware = ({dispatch, getState}) => next => action => {\r\n    if (action.type !== constants.API) return next(action);\r\n\r\n    dispatch({ type: constants.LOADER})\r\n    const  BASE_URL = 'http://localhost:5000';\r\n    const AUTH_TOKEN = getState().user.token;\r\n    const {url, method, success, data, postProcessSuccess, postProcessError} = \r\n    action.payload;\r\n\r\n    axios({\r\n        method, \r\n        url: BASE_URL + url, \r\n        data: data ? data : null \r\n    }).then((response) => {\r\n        dispatch({ type: constants.LOADER})\r\n        if(success) dispatch(success(response.data));\r\n        if(postProcessSuccess) postProcessSuccess(response.data);\r\n    }).catch(err => {\r\n        dispatch({ type: constants.LOADER})\r\n        if(!err.response) console.warn(err);\r\n        else{\r\n            if (err.response.data.error.message){\r\n                if(postProcessError) postProcessError(err.response.data.error.message);\r\n            }\r\n        }\r\n    })\r\n};"]},"metadata":{},"sourceType":"module"}