{"ast":null,"code":"var _jsxFileName = \"E:\\\\file project\\\\OJT\\\\TodoNew-Frontend\\\\FrontEnd-Todo\\\\frontend\\\\src\\\\pages\\\\editSubTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from 'react-redux';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { getDetailSubCategory, updateSubCategory } from \"../Redux/actions/subTodoAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditSubTodo = ({\n  match,\n  dispatchGetSubTodoId\n}) => {\n  _s();\n\n  const [activityTitle, setActivityTitle] = useState('\"\"');\n  const [note, setNote] = useState('');\n  const [priority, setPriority] = useState('');\n  useEffect(() => {\n    console.log(match);\n    const {\n      id\n    } = match.params;\n\n    if (id) {\n      dispatchGetSubTodoId(id, ({\n        activityTitle,\n        note,\n        priority\n      }) => {\n        setActivityTitle(activityTitle);\n        setNote(note);\n        setPriority(priority);\n      });\n    }\n  }, [dispatchGetSubTodoId, match.params]);\n\n  const handleSubmit = event => {\n    const {\n      id\n    } = match.params;\n    event.preventDefault();\n    const data = {\n      activityTitle,\n      note,\n      priority\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"activityTitle\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"title\",\n          id: \"activityTitle\",\n          placeholder: \"with a placeholder\",\n          onChange: e => setActivityTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"note\",\n          children: \"Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"note\",\n          id: \"note\",\n          placeholder: \"with a placeholder\",\n          onChange: e => setNote(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"priority\",\n          children: \"Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"select\",\n          name: \"priority\",\n          id: \"priority\",\n          onChange: e => setPriority(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"penting\",\n            children: \"Penting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"gapenting\",\n            children: \"Ga Penting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(EditSubTodo, \"nCN+obD5ji6lg46lUwbsToHLyAU=\");\n\n_c = EditSubTodo;\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchGetSubTodoId: (id, onSuccess) => dispatch(getDetailSubCategory(id, onSuccess)),\n  dispatchUpdateSubTodo: (id, data, onSuccess, onError) => dispatch(updateSubCategory(id, data, onSuccess, onError))\n});\n\nexport default connect(mapDispatchToProps)(EditSubTodo);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditSubTodo\");","map":{"version":3,"sources":["E:/file project/OJT/TodoNew-Frontend/FrontEnd-Todo/frontend/src/pages/editSubTodo.js"],"names":["React","useEffect","useState","connect","Button","Form","FormGroup","Label","Input","getDetailSubCategory","updateSubCategory","EditSubTodo","match","dispatchGetSubTodoId","activityTitle","setActivityTitle","note","setNote","priority","setPriority","console","log","id","params","handleSubmit","event","preventDefault","data","e","target","value","mapDispatchToProps","dispatch","onSuccess","dispatchUpdateSubTodo","onError"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport { Button,  Form, FormGroup, Label, Input,  } from 'reactstrap';\r\nimport { getDetailSubCategory, updateSubCategory } from \"../Redux/actions/subTodoAction\";\r\n\r\n\r\nconst EditSubTodo = ({match, dispatchGetSubTodoId}) =>  {\r\n\r\n    const [activityTitle, setActivityTitle] = useState('\"\"');\r\n    const [note, setNote] = useState ('');\r\n    const [priority, setPriority] = useState('');\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(match);\r\n        const {id} = match.params;\r\n    if (id) {\r\n        dispatchGetSubTodoId(id, ({activityTitle, note, priority}) => \r\n        {\r\n            setActivityTitle(activityTitle);\r\n            setNote(note);\r\n            setPriority(priority);\r\n        });\r\n      }\r\n    }, [dispatchGetSubTodoId, match.params])\r\n\r\n    const handleSubmit = event => {\r\n        const {id} = match.params;\r\n        event.preventDefault();\r\n        const data = {activityTitle, note, priority};\r\n\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Form onSubmit={handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"activityTitle\">Title</Label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              id=\"activityTitle\"\r\n              placeholder=\"with a placeholder\"\r\n              onChange={(e) => setActivityTitle(e.target.value)}\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"note\">Note</Label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"note\"\r\n              id=\"note\"\r\n              placeholder=\"with a placeholder\"\r\n              onChange={(e) => setNote(e.target.value)}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"priority\">Priority</Label>\r\n            <Input\r\n              type=\"select\"\r\n              name=\"priority\"\r\n              id=\"priority\"\r\n              onChange={(e) => setPriority(e.target.value)}\r\n            >\r\n              <option value=\"penting\">Penting</option>\r\n              <option value=\"gapenting\">Ga Penting</option>\r\n            </Input>\r\n          </FormGroup>\r\n\r\n          <Button type=\"submit\" color=\"primary\" >\r\n            Save\r\n          </Button>\r\n          <Button color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n        </Form>\r\n      </>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dispatchGetSubTodoId : (id, onSuccess) => \r\n        dispatch(getDetailSubCategory(id, onSuccess)),\r\n        \r\n    dispatchUpdateSubTodo : (id, data, onSuccess, onError) => \r\n        dispatch(updateSubCategory(id, data, onSuccess, onError))\r\n});\r\n\r\nexport default connect(mapDispatchToProps)(EditSubTodo) ;"]},"metadata":{},"sourceType":"module"}