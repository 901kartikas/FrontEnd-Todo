{"ast":null,"code":"var _jsxFileName = \"E:\\\\file project\\\\OJT\\\\TodoNew-Frontend\\\\FrontEnd-Todo\\\\frontend\\\\src\\\\pages\\\\editSubTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from 'react-redux';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { getDetailSubCategory, updateSubCategory } from \"../Redux/actions/subTodoAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EditSubTodo(props) {\n  _s();\n\n  const {\n    match,\n    dispatchGetSubTodoId,\n    dispatchUpdateSubTodo\n  } = props;\n  const [activityTitle, setActivityTitle] = useState('');\n  const [note, setNote] = useState('');\n  const [priority, setPriority] = useState(''); // useEffect(() => {\n  //     console.log(match);\n  //     const {id} = match.params;\n  // if (id) {\n  //     dispatchGetSubTodoId(id, ({activityTitle, note, priority}) => \n  //     {\n  //         setActivityTitle(activityTitle);\n  //         setNote(note);\n  //         setPriority(priority);\n  //     });\n  //   }\n  // }, [dispatchGetSubTodoId, match.params])\n  // const handleSubmit = event => {\n  //     const {id} = match.params;\n  //     const data = {activityTitle, note, priority};\n  //     event.preventDefault();\n  //     console.log('data', data)\n  //     dispatchUpdateSubTodo(id, data , () => {\n  //         console.log('bisaaaa');\n  //     })\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"activityTitle\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"title\",\n          id: \"activityTitle\",\n          placeholder: \"with a placeholder\",\n          onChange: e => setActivityTitle(e.target.value),\n          value: activityTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"note\",\n          children: \"Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"note\",\n          id: \"note\",\n          placeholder: \"with a placeholder\",\n          onChange: e => setNote(e.target.value),\n          value: note\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"priority\",\n          children: \"Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"select\",\n          name: \"priority\",\n          id: \"priority\",\n          onChange: e => setPriority(e.target.value),\n          value: priority,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"penting\",\n            children: \"Penting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"gapenting\",\n            children: \"Ga Penting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(EditSubTodo, \"o1tCDg0rizGJ4I/2lcTmiUP2l7A=\");\n\n_c = EditSubTodo;\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchGetSubTodoId: (id, onSuccess) => dispatch(getDetailSubCategory(id, onSuccess)),\n  dispatchUpdateSubTodo: (id, data, onSuccess, onError) => dispatch(updateSubCategory(id, data, onSuccess, onError))\n});\n\nexport default connect(null, mapDispatchToProps)(EditSubTodo);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditSubTodo\");","map":{"version":3,"sources":["E:/file project/OJT/TodoNew-Frontend/FrontEnd-Todo/frontend/src/pages/editSubTodo.js"],"names":["React","useEffect","useState","connect","Button","Form","FormGroup","Label","Input","getDetailSubCategory","updateSubCategory","EditSubTodo","props","match","dispatchGetSubTodoId","dispatchUpdateSubTodo","activityTitle","setActivityTitle","note","setNote","priority","setPriority","e","target","value","mapDispatchToProps","dispatch","id","onSuccess","data","onError"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport { Button,  Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport { getDetailSubCategory, updateSubCategory } from \"../Redux/actions/subTodoAction\";\r\n\r\n\r\nfunction EditSubTodo(props){\r\n  \r\n    const{match, dispatchGetSubTodoId,dispatchUpdateSubTodo} = props;\r\n    const [activityTitle, setActivityTitle] = useState('');\r\n    const [note, setNote] = useState ('');\r\n    const [priority, setPriority] = useState('');\r\n\r\n\r\n    // useEffect(() => {\r\n    //     console.log(match);\r\n    //     const {id} = match.params;\r\n    // if (id) {\r\n    //     dispatchGetSubTodoId(id, ({activityTitle, note, priority}) => \r\n    //     {\r\n    //         setActivityTitle(activityTitle);\r\n    //         setNote(note);\r\n    //         setPriority(priority);\r\n    //     });\r\n    //   }\r\n    // }, [dispatchGetSubTodoId, match.params])\r\n\r\n    // const handleSubmit = event => {\r\n    //     const {id} = match.params;\r\n    //     const data = {activityTitle, note, priority};\r\n    //     event.preventDefault();\r\n    //     console.log('data', data)\r\n    //     dispatchUpdateSubTodo(id, data , () => {\r\n    //         console.log('bisaaaa');\r\n    //     })\r\n    // }\r\n\r\n    return (\r\n      <>\r\n        <Form >\r\n          <FormGroup>\r\n            <Label for=\"activityTitle\">Title</Label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              id=\"activityTitle\"\r\n              placeholder=\"with a placeholder\"\r\n              onChange={(e) => setActivityTitle(e.target.value)}\r\n              value={activityTitle}\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"note\">Note</Label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"note\"\r\n              id=\"note\"\r\n              placeholder=\"with a placeholder\"\r\n              onChange={(e) => setNote(e.target.value)}\r\n              value={note}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"priority\">Priority</Label>\r\n            <Input\r\n              type=\"select\"\r\n              name=\"priority\"\r\n              id=\"priority\"\r\n              onChange={(e) => setPriority(e.target.value)}\r\n              value={priority}\r\n            >\r\n              <option value=\"penting\">Penting</option>\r\n              <option value=\"gapenting\">Ga Penting</option>\r\n            </Input>\r\n          </FormGroup>\r\n\r\n          <Button type=\"submit\" color=\"primary\" >\r\n            Save\r\n          </Button>\r\n          <Button color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n        </Form>\r\n      </>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dispatchGetSubTodoId : (id, onSuccess) => \r\n        dispatch(getDetailSubCategory(id, onSuccess)),\r\n\r\n    dispatchUpdateSubTodo : (id, data, onSuccess, onError) => \r\n        dispatch(updateSubCategory(id, data, onSuccess, onError))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(EditSubTodo) ;"]},"metadata":{},"sourceType":"module"}