{"ast":null,"code":"import * as constants from '../constant';\nexport default function todolistReducers(state = [], action) {\n  console.log('action', action);\n\n  switch (action.type) {\n    case constants.FETCH_ALL_TODO:\n      return action.payload;\n\n    case constants.CREATE_TODO:\n      return state.concat(action.payload);\n\n    case constants.DELETE_TODO:\n      return state.filter(item => item.id !== action.payload);\n\n    case constants.UPDATE_TODO:\n      return state.map(item => {\n        if (item.id === action.payload.id) return { ...item,\n          ...action.payload.data\n        };else return item;\n      });\n\n    case constants.RESET_USER_INFO:\n      return [];\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["E:/file project/OJT/TodoNew-Frontend/FrontEnd-Todo/frontend/src/Redux/reducers/todolistReducer.js"],"names":["constants","todolistReducers","state","action","console","log","type","FETCH_ALL_TODO","payload","CREATE_TODO","concat","DELETE_TODO","filter","item","id","UPDATE_TODO","map","data","RESET_USER_INFO"],"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,aAA3B;AAGA,eAAe,SAASC,gBAAT,CAA0BC,KAAK,GAAG,EAAlC,EAAsCC,MAAtC,EAA8C;AACzDC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBF,MAArB;;AACA,UAAOA,MAAM,CAACG,IAAd;AACI,SAAKN,SAAS,CAACO,cAAf;AACI,aAAOJ,MAAM,CAACK,OAAd;;AACJ,SAAKR,SAAS,CAACS,WAAf;AACI,aAAOP,KAAK,CAACQ,MAAN,CAAaP,MAAM,CAACK,OAApB,CAAP;;AACJ,SAAKR,SAAS,CAACW,WAAf;AACI,aAAOT,KAAK,CAACU,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYX,MAAM,CAACK,OAAxC,CAAP;;AACJ,SAAKR,SAAS,CAACe,WAAf;AACI,aAAOb,KAAK,CAACc,GAAN,CAAUH,IAAI,IAAI;AACrB,YAAIA,IAAI,CAACC,EAAL,KAAYX,MAAM,CAACK,OAAP,CAAeM,EAA/B,EACI,OAAO,EAAE,GAAGD,IAAL;AAAW,aAAGV,MAAM,CAACK,OAAP,CAAeS;AAA7B,SAAP,CADJ,KAGI,OAAOJ,IAAP;AACP,OALM,CAAP;;AAMJ,SAAKb,SAAS,CAACkB,eAAf;AACI,aAAO,EAAP;;AACJ;AACI,aAAOhB,KAAP;AAjBR;AAmBH","sourcesContent":["import * as constants from '../constant'\r\n\r\n\r\nexport default function todolistReducers(state = [], action) {\r\n    console.log('action',action)\r\n    switch(action.type) {\r\n        case constants.FETCH_ALL_TODO: \r\n            return action.payload;\r\n        case constants.CREATE_TODO:\r\n            return state.concat(action.payload);\r\n        case constants.DELETE_TODO: \r\n            return state.filter(item => item.id !== action.payload);\r\n        case constants.UPDATE_TODO: \r\n            return state.map(item => {\r\n                if (item.id === action.payload.id)\r\n                    return { ...item, ...action.payload.data};\r\n                else \r\n                    return item;\r\n            });\r\n        case constants.RESET_USER_INFO:\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}