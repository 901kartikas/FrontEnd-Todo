{"ast":null,"code":"var _jsxFileName = \"E:\\\\file project\\\\OJT\\\\TodoNew-Frontend\\\\frontend\\\\frontend\\\\src\\\\pages\\\\actionPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { CreateTodo } from \"../Redux/actions/todolistAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListPage = ({\n  dispatchCreateTodoAction\n}) => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row align-items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row-9\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"title\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                noValidate: true,\n                id: \"title\",\n                placeholder: \"judul\",\n                type: \"text\",\n                name: \"title\",\n                value: title,\n                onChange: e => setTitle(e.target.value),\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListPage, \"1GNs5BG/zBCkOIT6WAuxDpPLhMw=\");\n\n_c = ListPage;\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchCreateTodoAction: (data, onSuccess, onError) => dispatch(CreateTodo(data, onSuccess, onError))\n});\n\nexport default connect(null, mapDispatchToProps)(ListPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"ListPage\");","map":{"version":3,"sources":["E:/file project/OJT/TodoNew-Frontend/frontend/frontend/src/pages/actionPage.js"],"names":["React","useState","connect","CreateTodo","ListPage","dispatchCreateTodoAction","title","setTitle","e","target","value","mapDispatchToProps","dispatch","data","onSuccess","onError"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,iCAA3B;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkC;AAAA;;AACjD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACE;AAAM,YAAA,UAAU,MAAhB;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACE;AAAO,gBAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAO,gBAAA,UAAU,MAAjB;AAAkB,gBAAA,EAAE,EAAC,OAArB;AACA,gBAAA,WAAW,EAAC,OADZ;AAEA,gBAAA,IAAI,EAAC,MAFL;AAGA,gBAAA,IAAI,EAAC,OAHL;AAIA,gBAAA,KAAK,EAAEK,KAJP;AAKA,gBAAA,QAAQ,EAAGE,CAAD,IAAOD,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CALzB;AAMA,gBAAA,SAAS,EAAC;AANV;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA5BD;;GAAMN,Q;;KAAAA,Q;;AA8BN,MAAMO,kBAAkB,GAAIC,QAAD,KAAe;AACxCP,EAAAA,wBAAwB,EAAE,CAACQ,IAAD,EAAOC,SAAP,EAAkBC,OAAlB,KACxBH,QAAQ,CAACT,UAAU,CAACU,IAAD,EAAOC,SAAP,EAAkBC,OAAlB,CAAX;AAF8B,CAAf,CAA3B;;AAKA,eAAeb,OAAO,CAAC,IAAD,EAAOS,kBAAP,CAAP,CAAkCP,QAAlC,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CreateTodo } from \"../Redux/actions/todolistAction\";\r\n\r\nconst ListPage = ({ dispatchCreateTodoAction }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h3>Add Todo</h3>\r\n        </div>\r\n        <div className=\"row align-items-center\">\r\n          <div className=\"row-9\">\r\n            <form noValidate>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input noValidate id=\"title\"\r\n                placeholder=\"judul\"  \r\n                type=\"text\"\r\n                name=\"title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                className=\"form-control\"/>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatchCreateTodoAction: (data, onSuccess, onError) =>\r\n    dispatch(CreateTodo(data, onSuccess, onError)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ListPage);\r\n"]},"metadata":{},"sourceType":"module"}