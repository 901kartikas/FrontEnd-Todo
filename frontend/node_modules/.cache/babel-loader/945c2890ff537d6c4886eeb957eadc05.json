{"ast":null,"code":"var _jsxFileName = \"E:\\\\file project\\\\OJT\\\\TodoNew-Frontend\\\\FrontEnd-Todo\\\\frontend\\\\src\\\\pages\\\\editSubTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport { updateSubCategory, getDetailSubCategory } from \"../Redux/actions/subTodoAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FormEditSubTodo(props) {\n  _s();\n\n  const {\n    dispatchGetSubDetailTodoIdAction,\n    todoCategoryID,\n    dispatchUpdateSubTodoAction,\n    todoID,\n    history\n  } = props;\n  const {\n    className\n  } = props;\n  console.log(props);\n  const [modal, setModal] = useState(false);\n  const [activityTitle, setActivityTitle] = useState(\"\");\n  const [priority, setPriority] = useState(\"penting\");\n  const [note, setNote] = useState(\"\");\n\n  const toggle = () => setModal(!modal);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = {\n      activityTitle,\n      priority,\n      note\n    };\n    const subId = props.todoCategoryID;\n    console.log(subId, data);\n    dispatchUpdateSubTodoAction(subId, data, () => {\n      console.log('berhasil');\n    });\n  };\n\n  const handleEdit = () => {\n    const SubId = props.todoID;\n\n    if (SubId) {\n      dispatchGetSubDetailTodoIdAction(SubId, SubData => {\n        console.log('test', SubData);\n        setActivityTitle(SubData.activityTitle);\n        setPriority(SubData.priority);\n        setNote(SubData.note);\n        setModal(true);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"activityTitle\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"title\",\n          id: \"activityTitle\",\n          placeholder: \"with a placeholder\",\n          onChange: e => setActivityTitle(e.target.value),\n          value: activityTitle,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"note\",\n          children: \"Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"note\",\n          id: \"note\",\n          placeholder: \"with a placeholder\",\n          onChange: e => setNote(e.target.value),\n          value: note,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"priority\",\n          children: \"Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"select\",\n          value: priority,\n          name: \"priority\",\n          id: \"priority\",\n          onChange: e => setPriority(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"penting\",\n            children: \"Penting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"gapenting\",\n            children: \"Ga Penting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        onClick: toggle,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        onClick: toggle,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(FormEditSubTodo, \"n9ToQvcixcMqTAOSimNtz1+Fgow=\");\n\n_c = FormEditSubTodo;\n;\n\nconst mapStateToProps = state => ({\n  subTodoCategory: state.subTodoList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchGetSubDetailTodoIdAction: (id, onSuccess) => dispatch(getDetailSubCategory(id, onSuccess)),\n  dispatchUpdateSubTodoAction: (id, data, onSuccess, onError) => dispatch(updateSubCategory(id, data, onSuccess, onError))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormEditSubTodo);\n\nvar _c;\n\n$RefreshReg$(_c, \"FormEditSubTodo\");","map":{"version":3,"sources":["E:/file project/OJT/TodoNew-Frontend/FrontEnd-Todo/frontend/src/pages/editSubTodo.js"],"names":["React","useState","connect","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","toast","updateSubCategory","getDetailSubCategory","FormEditSubTodo","props","dispatchGetSubDetailTodoIdAction","todoCategoryID","dispatchUpdateSubTodoAction","todoID","history","className","console","log","modal","setModal","activityTitle","setActivityTitle","priority","setPriority","note","setNote","toggle","handleSubmit","e","preventDefault","data","subId","handleEdit","SubId","SubData","target","value","mapStateToProps","state","subTodoCategory","subTodoList","mapDispatchToProps","dispatch","id","onSuccess","onError"],"mappings":";;;AAGA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,WAAhD,EAA6DC,IAA7D,EAAmEC,SAAnE,EAA8EC,KAA9E,EAAqFC,KAArF,QAAiG,YAAjG;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,QAAwD,gCAAxD;;;;AAGA,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;AAAA;;AAC3B,QAAM;AAACC,IAAAA,gCAAD;AACFC,IAAAA,cADE;AACcC,IAAAA,2BADd;AAC2CC,IAAAA,MAD3C;AACmDC,IAAAA;AADnD,MAC8DL,KADpE;AAEA,QAAM;AACFM,IAAAA;AADE,MAEFN,KAFJ;AAIAO,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AAEA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAAC0B,aAAD,EAAeC,gBAAf,IAAmC3B,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAM,CAAC4B,QAAD,EAAWC,WAAX,IAA0B7B,QAAQ,CAAC,SAAD,CAAxC;AACA,QAAM,CAAC8B,IAAD,EAAOC,OAAP,IAAkB/B,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMgC,MAAM,GAAG,MAAMP,QAAQ,CAAC,CAACD,KAAF,CAA7B;;AAEA,QAAMS,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAG;AAACV,MAAAA,aAAD;AAAgBE,MAAAA,QAAhB;AAA0BE,MAAAA;AAA1B,KAAb;AACA,UAAMO,KAAK,GAAItB,KAAK,CAACE,cAArB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ,EAAmBD,IAAnB;AACAlB,IAAAA,2BAA2B,CAACmB,KAAD,EAAQD,IAAR,EAAc,MAAM;AAC3Cd,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,KAF0B,CAA3B;AAGH,GARD;;AAUA,QAAMe,UAAU,GAAG,MAAM;AACrB,UAAMC,KAAK,GAAGxB,KAAK,CAACI,MAApB;;AACA,QAAGoB,KAAH,EAAS;AACLvB,MAAAA,gCAAgC,CAACuB,KAAD,EAAQC,OAAO,IAAG;AAC9ClB,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBiB,OAAnB;AACAb,QAAAA,gBAAgB,CAACa,OAAO,CAACd,aAAT,CAAhB;AACAG,QAAAA,WAAW,CAACW,OAAO,CAACZ,QAAT,CAAX;AACAG,QAAAA,OAAO,CAACS,OAAO,CAACV,IAAT,CAAP;AACAL,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,OAN+B,CAAhC;AAOH;AACJ,GAXD;;AAcA,sBACI;AAAA,2BAGI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEQ,YAAhB;AAAA,8BAEI,QAAC,SAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,GAAG,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,IAAI,EAAC,OAFL;AAGA,UAAA,EAAE,EAAC,eAHH;AAIA,UAAA,WAAW,EAAC,oBAJZ;AAKA,UAAA,QAAQ,EAAGC,CAAD,IAAOP,gBAAgB,CAACO,CAAC,CAACO,MAAF,CAASC,KAAV,CALjC;AAMA,UAAA,KAAK,EAAEhB,aANP;AAOA,UAAA,SAAS,EAAC;AAPV;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAeI,QAAC,SAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,IAAI,EAAC,MAFL;AAGA,UAAA,EAAE,EAAC,MAHH;AAIA,UAAA,WAAW,EAAC,oBAJZ;AAKA,UAAA,QAAQ,EAAGQ,CAAD,IAAOH,OAAO,CAACG,CAAC,CAACO,MAAF,CAASC,KAAV,CALxB;AAMA,UAAA,KAAK,EAAEZ,IANP;AAOA,UAAA,SAAS,EAAC;AAPV;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,eA2BI,QAAC,SAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEQ,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAEF,QAA5B;AAAsC,UAAA,IAAI,EAAC,UAA3C;AAAsD,UAAA,EAAE,EAAC,UAAzD;AAAoE,UAAA,QAAQ,EAAGM,CAAD,IAAOL,WAAW,CAACK,CAAC,CAACO,MAAF,CAASC,KAAV,CAAhG;AAAA,kCACA;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAQ,YAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BJ,eAoCI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,SAA5B;AAAsC,QAAA,OAAO,EAAEV,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApCJ,eAuCI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,WAAd;AAA0B,QAAA,OAAO,EAAEA,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ,mBADJ;AAmDH;;GA3FQlB,e;;KAAAA,e;AA2FR;;AAED,MAAM6B,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,eAAe,EAAGD,KAAK,CAACE;AADM,CAAL,CAA7B;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACtChC,EAAAA,gCAAgC,EAAE,CAACiC,EAAD,EAAKC,SAAL,KAC9BF,QAAQ,CAACnC,oBAAoB,CAAEoC,EAAF,EAAMC,SAAN,CAArB,CAF0B;AAItChC,EAAAA,2BAA2B,EAAE,CAAC+B,EAAD,EAAKb,IAAL,EAAWc,SAAX,EAAsBC,OAAtB,KACzBH,QAAQ,CAACpC,iBAAiB,CAACqC,EAAD,EAAKb,IAAL,EAAWc,SAAX,EAAsBC,OAAtB,CAAlB;AAL0B,CAAf,CAA3B;;AAQA,eAAelD,OAAO,CAAC0C,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CjC,eAA7C,CAAf","sourcesContent":["\r\n\r\n\r\nimport React, {useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport {toast} from 'react-toastify'\r\nimport { updateSubCategory, getDetailSubCategory } from \"../Redux/actions/subTodoAction\";\r\n\r\n\r\nfunction FormEditSubTodo(props){\r\n    const {dispatchGetSubDetailTodoIdAction,\r\n        todoCategoryID, dispatchUpdateSubTodoAction, todoID, history} = props;\r\n    const {\r\n        className\r\n    } = props;\r\n    \r\n    console.log(props)\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [activityTitle,setActivityTitle] = useState(\"\")\r\n    const [priority, setPriority] = useState(\"penting\")\r\n    const [note, setNote] = useState(\"\")\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const data = {activityTitle, priority, note}\r\n        const subId =  props.todoCategoryID;\r\n        console.log(subId, data);\r\n        dispatchUpdateSubTodoAction(subId, data, () => {\r\n            console.log('berhasil')\r\n        })\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        const SubId = props.todoID;\r\n        if(SubId){\r\n            dispatchGetSubDetailTodoIdAction(SubId, SubData =>{\r\n                console.log('test',SubData)\r\n                setActivityTitle(SubData.activityTitle)\r\n                setPriority(SubData.priority)\r\n                setNote(SubData.note)\r\n                setModal(true);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n       \r\n       \r\n            <Form onSubmit={handleSubmit}>\r\n         \r\n                <FormGroup>\r\n                    <Label for=\"activityTitle\">Title</Label>\r\n                    <Input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    id=\"activityTitle\"\r\n                    placeholder=\"with a placeholder\"\r\n                    onChange={(e) => setActivityTitle(e.target.value)}\r\n                    value={activityTitle}\r\n                    className=\"form-control\"\r\n                    />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label for=\"note\">Note</Label>\r\n                    <Input\r\n                    type=\"text\"\r\n                    name=\"note\"\r\n                    id=\"note\"\r\n                    placeholder=\"with a placeholder\"\r\n                    onChange={(e) => setNote(e.target.value)}\r\n                    value={note}\r\n                    className=\"form-control\"\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"priority\">Priority</Label>\r\n                        <Input type=\"select\" value={priority} name=\"priority\" id=\"priority\" onChange={(e) => setPriority(e.target.value)} >\r\n                        <option value=\"penting\">Penting</option>\r\n                        <option value=\"gapenting\">Ga Penting</option>\r\n                    </Input>\r\n                </FormGroup>\r\n            \r\n           \r\n                <Button type=\"submit\" color=\"primary\" onClick={toggle}>\r\n                    Save\r\n                </Button>\r\n                <Button color=\"secondary\" onClick={toggle}>\r\n                    Cancel\r\n                </Button>\r\n          \r\n            </Form>\r\n       \r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    subTodoCategory : state.subTodoList,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dispatchGetSubDetailTodoIdAction: (id, onSuccess) => \r\n        dispatch(getDetailSubCategory (id, onSuccess)),\r\n\r\n    dispatchUpdateSubTodoAction: (id, data, onSuccess, onError) => \r\n        dispatch(updateSubCategory(id, data, onSuccess, onError)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormEditSubTodo);\r\n  "]},"metadata":{},"sourceType":"module"}