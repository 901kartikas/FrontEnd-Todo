{"ast":null,"code":"import * as constants from '../constant';\nconst defaultState = {\n  userId: null,\n  greeting: null,\n  token: null,\n  isLoggedIn: false\n};\nconst userInfo = localStorage.getItem('USER_INFO');\n\nconst INITIAL_STATE = () => {\n  return userInfo ? JSON.parse(userInfo) : defaultState;\n};\n\n_c = INITIAL_STATE;\nexport default function userReducers(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case constants.SET_USER_INFO:\n      return { ...action.payload\n      };\n\n    case constants.RESET_USER_INFO:\n      return { ...defaultState\n      };\n\n    default:\n      return state;\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"INITIAL_STATE\");","map":{"version":3,"sources":["E:/file project/OJT/TodoNew-Frontend/frontend/src/Redux/reducers/userReducer.js"],"names":["constants","defaultState","userId","greeting","token","isLoggedIn","userInfo","localStorage","getItem","INITIAL_STATE","JSON","parse","userReducers","state","action","type","SET_USER_INFO","payload","RESET_USER_INFO"],"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,aAA3B;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,IADS;AAEjBC,EAAAA,QAAQ,EAAC,IAFQ;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAIjBC,EAAAA,UAAU,EAAE;AAJK,CAArB;AAQA,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAjB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACxB,SAAOH,QAAQ,GAAGI,IAAI,CAACC,KAAL,CAAWL,QAAX,CAAH,GAA0BL,YAAzC;AACH,CAFD;;KAAMQ,a;AAKN,eAAe,SAASG,YAAT,CAAsBC,KAAK,GAAGJ,aAA9B,EAA6CK,MAA7C,EAAqD;AAChE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKf,SAAS,CAACgB,aAAf;AACI,aAAO,EAAC,GAAGF,MAAM,CAACG;AAAX,OAAP;;AACJ,SAAKjB,SAAS,CAACkB,eAAf;AACI,aAAO,EAAC,GAAGjB;AAAJ,OAAP;;AACJ;AACI,aAAOY,KAAP;AANR;AAQH","sourcesContent":["import * as constants from '../constant';\r\n\r\n\r\nconst defaultState = {\r\n    userId: null, \r\n    greeting:null,\r\n    token: null,\r\n    isLoggedIn: false,\r\n\r\n}\r\n\r\nconst userInfo = localStorage.getItem('USER_INFO');\r\n\r\nconst INITIAL_STATE = () => {\r\n    return userInfo ? JSON.parse(userInfo) : defaultState;  \r\n}\r\n\r\n\r\nexport default function userReducers(state = INITIAL_STATE, action) {\r\n    switch (action.type){\r\n        case constants.SET_USER_INFO:\r\n            return {...action.payload};\r\n        case constants.RESET_USER_INFO:\r\n            return {...defaultState};\r\n        default:\r\n            return state; \r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}