{"ast":null,"code":"var _jsxFileName = \"E:\\\\file project\\\\OJT\\\\TodoNew-Frontend\\\\FrontEnd-Todo\\\\frontend\\\\src\\\\pages\\\\editSubTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport { updateSubCategory, getCategoryById } from \"../Redux/actions/subTodoAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditTodo = ({\n  dispatchGetSubTodoIdAction,\n  match,\n  dispatchUpdateSubTodoAction,\n  history\n}) => {\n  _s();\n\n  const [activityTitle, setActivityTitle] = useState(\"\");\n  useEffect(() => {\n    console.log(match);\n    const {\n      id\n    } = match.params;\n\n    if (id) {\n      id, ({}) => {\n        setActivityTitle();\n      };\n    }\n  }, [dispatchGetSubTodoIdAction, match.params]);\n\n  const handleOnSubmit = event => {\n    const {\n      id\n    } = match.params;\n    event.preventDefault();\n    const data = {\n      categoryTitle\n    };\n    console.log('bisa nih');\n    dispatchUpdateSubTodoAction(id, data, () => {\n      toast.success('sudah diupdate');\n    }, message => toast.error(`Error : ${message}`));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleOnSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"activityTitle\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"title\",\n          id: \"activityTitle\",\n          placeholder: \"with a placeholder\",\n          onChange: e => setActivityTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"note\",\n          children: \"Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"note\",\n          id: \"note\",\n          placeholder: \"with a placeholder\",\n          onChange: e => setNote(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"priority\",\n          children: \"Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"select\",\n          name: \"priority\",\n          id: \"priority\",\n          onChange: e => setPriority(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"penting\",\n            children: \"Penting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"gapenting\",\n            children: \"Ga Penting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        children: \" save \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n};\n\n_s(EditTodo, \"pU1tEvhoWGjBHJgllVMyfVpL20k=\");\n\n_c = EditTodo;\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchUpdateSubTodoAction: (id, data, onSuccess, onError) => dispatch(updateSubCategory(id, data, onSuccess, onError)),\n  dispatchGetSubTodoIdAction: (id, onSuccess) => dispatch(getCategoryById(id, onSuccess))\n});\n\nexport default connect(null, mapDispatchToProps)(EditTodo);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTodo\");","map":{"version":3,"sources":["E:/file project/OJT/TodoNew-Frontend/FrontEnd-Todo/frontend/src/pages/editSubTodo.js"],"names":["React","useState","useEffect","connect","Button","Form","FormGroup","Label","Input","toast","updateSubCategory","getCategoryById","EditTodo","dispatchGetSubTodoIdAction","match","dispatchUpdateSubTodoAction","history","activityTitle","setActivityTitle","console","log","id","params","handleOnSubmit","event","preventDefault","data","categoryTitle","success","message","error","e","target","value","setNote","setPriority","mapDispatchToProps","dispatch","onSuccess","onError"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport {toast} from 'react-toastify'\r\nimport { updateSubCategory, getCategoryById} from \"../Redux/actions/subTodoAction\";\r\n\r\n\r\n\r\n\r\nconst EditTodo = ({ dispatchGetSubTodoIdAction, match, dispatchUpdateSubTodoAction,history }) => {\r\n  \r\n    const [activityTitle, setActivityTitle] = useState(\"\");\r\n  \r\n  \r\n    useEffect(()=> {\r\n      console.log(match);\r\n      const {id} = match.params;\r\n      if(id){\r\n        (id, ({}) =>\r\n        {\r\n          setActivityTitle();\r\n        });\r\n      }\r\n    }, [dispatchGetSubTodoIdAction, match.params])\r\n  \r\n  \r\n    const handleOnSubmit = event => {\r\n      const {id} = match.params;\r\n      event.preventDefault();\r\n      const data = {categoryTitle};\r\n      console.log('bisa nih')\r\n      dispatchUpdateSubTodoAction(id, data, () => {\r\n           toast.success('sudah diupdate');\r\n      }, (message) => toast.error(`Error : ${message}`));\r\n  }\r\n  \r\n  \r\n    return (\r\n      <React.Fragment>\r\n          <Form onSubmit={handleOnSubmit}>\r\n               <FormGroup>\r\n                        <Label for=\"activityTitle\">Title</Label>\r\n                        <Input\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        id=\"activityTitle\"\r\n                        placeholder=\"with a placeholder\"\r\n                        onChange={(e) => setActivityTitle(e.target.value)}\r\n                        />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <Label for=\"note\">Note</Label>\r\n                        <Input\r\n                        type=\"text\"\r\n                        name=\"note\"\r\n                        id=\"note\"\r\n                        placeholder=\"with a placeholder\"\r\n                        onChange={(e) => setNote(e.target.value)}\r\n\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"priority\">Priority</Label>\r\n                            <Input type=\"select\" name=\"priority\" id=\"priority\" onChange={(e) => setPriority(e.target.value)} >\r\n                            <option value=\"penting\">Penting</option>\r\n                            <option value=\"gapenting\">Ga Penting</option>\r\n                        </Input>\r\n                    </FormGroup>\r\n                    <Button className=\"btn btn-primary\" type=\"submit\"> save </Button>\r\n          </Form>\r\n           \r\n      </React.Fragment>\r\n    );\r\n  };\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n    dispatchUpdateSubTodoAction: (id, data, onSuccess, onError) => \r\n      dispatch(updateSubCategory(id, data, onSuccess, onError)),\r\n      \r\n    dispatchGetSubTodoIdAction: (id, onSuccess) => \r\n        dispatch(getCategoryById(id, onSuccess)),\r\n  });\r\n  \r\n  export default connect(null, mapDispatchToProps)(EditTodo);\r\n  \r\n  \r\n  \r\n  "]},"metadata":{},"sourceType":"module"}