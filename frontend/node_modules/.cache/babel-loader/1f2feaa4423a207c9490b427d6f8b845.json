{"ast":null,"code":"var _jsxFileName = \"E:\\\\file project\\\\OJT\\\\TodoNew-Frontend\\\\FrontEnd-Todo\\\\frontend\\\\src\\\\pages\\\\editSubTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from 'react-redux';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { getDetailSubCategory, updateSubCategory } from \"../Redux/actions/subTodoAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EditSubTodo(props) {\n  _s();\n\n  const {\n    match,\n    dispatchGetSubTodoId,\n    dispatchUpdateDetail\n  } = props;\n  const [activityTitle, setActivityTitle] = useState('');\n  const [note, setNote] = useState('');\n  const [priority, setPriority] = useState('');\n  const [todoID, setTodoID] = useState(0);\n  const [todoCategoryID, setTodoCategoryID] = useState(0);\n  console.log('ini props: ', props);\n  console.log(match);\n  useEffect(() => {\n    console.log(match);\n    const noteId = props.match.params.EditSubTodo;\n\n    if (noteId) {\n      dispatchGetSubTodoId(noteId, ({\n        activityTitle,\n        note,\n        priority\n      }) => {\n        setActivityTitle(activityTitle);\n        setNote(note);\n        setPriority(priority);\n        setTodoCategoryID(todoCategoryID);\n        setTodoID(todoID);\n      });\n    }\n  }, [dispatchGetSubTodoId, match.params]);\n\n  const handleSubmit = event => {\n    const noteId = props.match.params.EditSubTodo;\n    const data = {\n      activityTitle,\n      note,\n      priority,\n      todoID,\n      todoCategoryID\n    };\n    event.preventDefault();\n    console.log(todoID, todoCategoryID);\n    console.log('data', data);\n    dispatchUpdateDetail(noteId, data, () => {\n      console.log('bisaaaa');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"activityTitle\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"title\",\n          id: \"activityTitle\",\n          placeholder: \"with a placeholder\",\n          onChange: e => setActivityTitle(e.target.value),\n          value: activityTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"note\",\n          children: \"Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"note\",\n          id: \"note\",\n          placeholder: \"with a placeholder\",\n          onChange: e => setNote(e.target.value),\n          value: note\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"priority\",\n          children: \"Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"select\",\n          name: \"priority\",\n          id: \"priority\",\n          onChange: e => setPriority(e.target.value),\n          value: priority,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"penting\",\n            children: \"Penting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"gapenting\",\n            children: \"Ga Penting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(EditSubTodo, \"zQC05/bHslNWOBXFgeVuPdK0J0I=\");\n\n_c = EditSubTodo;\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchUpdateDetail: (id, data, onSuccess, onError) => dispatch(updateSubCategory(id, data, onSuccess, onError)),\n  dispatchGetSubTodoId: (id, onSuccess) => dispatch(getDetailSubCategory(id, onSuccess))\n});\n\nexport default connect(null, mapDispatchToProps)(EditSubTodo);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditSubTodo\");","map":{"version":3,"sources":["E:/file project/OJT/TodoNew-Frontend/FrontEnd-Todo/frontend/src/pages/editSubTodo.js"],"names":["React","useEffect","useState","connect","Button","Form","FormGroup","Label","Input","getDetailSubCategory","updateSubCategory","EditSubTodo","props","match","dispatchGetSubTodoId","dispatchUpdateDetail","activityTitle","setActivityTitle","note","setNote","priority","setPriority","todoID","setTodoID","todoCategoryID","setTodoCategoryID","console","log","noteId","params","handleSubmit","event","data","preventDefault","e","target","value","mapDispatchToProps","dispatch","id","onSuccess","onError"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport { Button,  Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport { getDetailSubCategory, updateSubCategory } from \"../Redux/actions/subTodoAction\";\r\n\r\n\r\nfunction EditSubTodo(props){\r\n  \r\n    const{match, dispatchGetSubTodoId,dispatchUpdateDetail} = props;\r\n    const [activityTitle, setActivityTitle] = useState('');\r\n    const [note, setNote] = useState ('');\r\n    const [priority, setPriority] = useState('');\r\n    const [todoID, setTodoID] = useState(0);\r\n    const [todoCategoryID, setTodoCategoryID] = useState(0)\r\n\r\n    console.log('ini props: ',props)\r\n    console.log(match)\r\n    useEffect(() => {\r\n        console.log(match);\r\n        const noteId = props.match.params.EditSubTodo;\r\n    if (noteId) {\r\n        dispatchGetSubTodoId(noteId, ({activityTitle, note, priority}) => \r\n        {\r\n            setActivityTitle(activityTitle);\r\n            setNote(note);\r\n            setPriority(priority);\r\n            setTodoCategoryID(todoCategoryID);\r\n            setTodoID(todoID);\r\n        });\r\n      }\r\n    }, [dispatchGetSubTodoId, match.params])\r\n\r\n    const handleSubmit = event => {\r\n        const noteId = props.match.params.EditSubTodo;\r\n        const data = {activityTitle, note, priority, todoID, todoCategoryID };\r\n        event.preventDefault();\r\n        console.log(todoID, todoCategoryID)\r\n        console.log('data', data)\r\n        dispatchUpdateDetail(noteId, data , () => {\r\n            console.log('bisaaaa');\r\n        })\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Form onSubmit={handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"activityTitle\">Title</Label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              id=\"activityTitle\"\r\n              placeholder=\"with a placeholder\"\r\n              onChange={(e) => setActivityTitle(e.target.value)}\r\n              value={activityTitle}\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"note\">Note</Label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"note\"\r\n              id=\"note\"\r\n              placeholder=\"with a placeholder\"\r\n              onChange={(e) => setNote(e.target.value)}\r\n              value={note}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"priority\">Priority</Label>\r\n            <Input\r\n              type=\"select\"\r\n              name=\"priority\"\r\n              id=\"priority\"\r\n              onChange={(e) => setPriority(e.target.value)}\r\n              value={priority}\r\n            >\r\n              <option value=\"penting\">Penting</option>\r\n              <option value=\"gapenting\">Ga Penting</option>\r\n            </Input>\r\n          </FormGroup>\r\n\r\n          <Button type=\"submit\" color=\"primary\" >\r\n            Save\r\n          </Button>\r\n          <Button color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n        </Form>\r\n      </>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dispatchUpdateDetail: (id, data, onSuccess, onError) => \r\n        dispatch(updateSubCategory(id, data, onSuccess, onError)),\r\n    \r\n    dispatchGetSubTodoId: (id, onSuccess) => \r\n      dispatch(getDetailSubCategory(id, onSuccess))\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(EditSubTodo) ;"]},"metadata":{},"sourceType":"module"}