{"ast":null,"code":"var _jsxFileName = \"E:\\\\file project\\\\OJT\\\\TodoNew-Frontend\\\\FrontEnd-Todo\\\\frontend\\\\src\\\\pages\\\\editSubTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport { updateSubCategory, getDetailSubCategory } from \"../Redux/actions/subTodoAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FormEditSubTodo(props) {\n  _s();\n\n  const {\n    dispatchGetSubDetailTodoIdAction,\n    todoCategoryID,\n    dispatchUpdateSubTodoAction,\n    todoID,\n    history\n  } = props;\n  const {\n    className\n  } = props;\n  console.log(props);\n  const [modal, setModal] = useState(false);\n  const [activityTitle, setActivityTitle] = useState(\"\");\n  const [priority, setPriority] = useState(\"penting\");\n  const [note, setNote] = useState(\"\");\n\n  const toggle = () => setModal(!modal);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = {\n      activityTitle,\n      priority,\n      note\n    };\n    const subId = props.todoCategoryID;\n    console.log(subId, data);\n    dispatchUpdateSubTodoAction(subId, data, () => {\n      console.log('berhasil');\n    });\n  };\n\n  const handleEdit = () => {\n    const SubId = props.todoID;\n\n    if (SubId) {\n      dispatchGetSubDetailTodoIdAction(SubId, SubData => {\n        console.log('test', SubData);\n        setActivityTitle(SubData.activityTitle);\n        setPriority(SubData.priority);\n        setNote(SubData.note);\n        setModal(true);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"oke\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(FormEditSubTodo, \"n9ToQvcixcMqTAOSimNtz1+Fgow=\");\n\n_c = FormEditSubTodo;\n;\n\nconst mapStateToProps = state => ({\n  subTodoCategory: state.subTodoList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchGetSubDetailTodoIdAction: (id, onSuccess) => dispatch(getDetailSubCategory(id, onSuccess)),\n  dispatchUpdateSubTodoAction: (id, data, onSuccess, onError) => dispatch(updateSubCategory(id, data, onSuccess, onError))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormEditSubTodo);\n\nvar _c;\n\n$RefreshReg$(_c, \"FormEditSubTodo\");","map":{"version":3,"sources":["E:/file project/OJT/TodoNew-Frontend/FrontEnd-Todo/frontend/src/pages/editSubTodo.js"],"names":["React","useState","connect","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","toast","updateSubCategory","getDetailSubCategory","FormEditSubTodo","props","dispatchGetSubDetailTodoIdAction","todoCategoryID","dispatchUpdateSubTodoAction","todoID","history","className","console","log","modal","setModal","activityTitle","setActivityTitle","priority","setPriority","note","setNote","toggle","handleSubmit","e","preventDefault","data","subId","handleEdit","SubId","SubData","mapStateToProps","state","subTodoCategory","subTodoList","mapDispatchToProps","dispatch","id","onSuccess","onError"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,WAAhD,EAA6DC,IAA7D,EAAmEC,SAAnE,EAA8EC,KAA9E,EAAqFC,KAArF,QAAiG,YAAjG;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,QAAwD,gCAAxD;;;;AAGA,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;AAAA;;AAC3B,QAAM;AAACC,IAAAA,gCAAD;AACFC,IAAAA,cADE;AACcC,IAAAA,2BADd;AAC2CC,IAAAA,MAD3C;AACmDC,IAAAA;AADnD,MAC8DL,KADpE;AAEA,QAAM;AACFM,IAAAA;AADE,MAEFN,KAFJ;AAIAO,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AAEA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAAC0B,aAAD,EAAeC,gBAAf,IAAmC3B,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAM,CAAC4B,QAAD,EAAWC,WAAX,IAA0B7B,QAAQ,CAAC,SAAD,CAAxC;AACA,QAAM,CAAC8B,IAAD,EAAOC,OAAP,IAAkB/B,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMgC,MAAM,GAAG,MAAMP,QAAQ,CAAC,CAACD,KAAF,CAA7B;;AAEA,QAAMS,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,IAAI,GAAG;AAACV,MAAAA,aAAD;AAAgBE,MAAAA,QAAhB;AAA0BE,MAAAA;AAA1B,KAAb;AACA,UAAMO,KAAK,GAAItB,KAAK,CAACE,cAArB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ,EAAmBD,IAAnB;AACAlB,IAAAA,2BAA2B,CAACmB,KAAD,EAAQD,IAAR,EAAc,MAAM;AAC3Cd,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,KAF0B,CAA3B;AAGH,GATD;;AAWA,QAAMe,UAAU,GAAG,MAAM;AACrB,UAAMC,KAAK,GAAGxB,KAAK,CAACI,MAApB;;AACA,QAAGoB,KAAH,EAAS;AACLvB,MAAAA,gCAAgC,CAACuB,KAAD,EAAQC,OAAO,IAAG;AAC9ClB,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBiB,OAAnB;AACAb,QAAAA,gBAAgB,CAACa,OAAO,CAACd,aAAT,CAAhB;AACAG,QAAAA,WAAW,CAACW,OAAO,CAACZ,QAAT,CAAX;AACAG,QAAAA,OAAO,CAACS,OAAO,CAACV,IAAT,CAAP;AACAL,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,OAN+B,CAAhC;AAOH;AACJ,GAXD;;AAcA,sBACI;AAAA,2BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAMH;;GA/CQX,e;;KAAAA,e;AA+CR;;AAED,MAAM2B,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,eAAe,EAAGD,KAAK,CAACE;AADM,CAAL,CAA7B;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACtC9B,EAAAA,gCAAgC,EAAE,CAAC+B,EAAD,EAAKC,SAAL,KAC9BF,QAAQ,CAACjC,oBAAoB,CAAEkC,EAAF,EAAMC,SAAN,CAArB,CAF0B;AAItC9B,EAAAA,2BAA2B,EAAE,CAAC6B,EAAD,EAAKX,IAAL,EAAWY,SAAX,EAAsBC,OAAtB,KACzBH,QAAQ,CAAClC,iBAAiB,CAACmC,EAAD,EAAKX,IAAL,EAAWY,SAAX,EAAsBC,OAAtB,CAAlB;AAL0B,CAAf,CAA3B;;AAQA,eAAehD,OAAO,CAACwC,eAAD,EAAkBI,kBAAlB,CAAP,CAA6C/B,eAA7C,CAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport {toast} from 'react-toastify'\r\nimport { updateSubCategory, getDetailSubCategory } from \"../Redux/actions/subTodoAction\";\r\n\r\n\r\nfunction FormEditSubTodo(props){\r\n    const {dispatchGetSubDetailTodoIdAction,\r\n        todoCategoryID, dispatchUpdateSubTodoAction, todoID, history} = props;\r\n    const {\r\n        className\r\n    } = props;\r\n    \r\n    console.log(props)\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [activityTitle,setActivityTitle] = useState(\"\")\r\n    const [priority, setPriority] = useState(\"penting\")\r\n    const [note, setNote] = useState(\"\")\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const data = {activityTitle, priority, note}\r\n        const subId =  props.todoCategoryID;\r\n        console.log(subId, data);\r\n        dispatchUpdateSubTodoAction(subId, data, () => {\r\n            console.log('berhasil')\r\n        })\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        const SubId = props.todoID;\r\n        if(SubId){\r\n            dispatchGetSubDetailTodoIdAction(SubId, SubData =>{\r\n                console.log('test',SubData)\r\n                setActivityTitle(SubData.activityTitle)\r\n                setPriority(SubData.priority)\r\n                setNote(SubData.note)\r\n                setModal(true);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <p>oke</p>\r\n        \r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    subTodoCategory : state.subTodoList,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dispatchGetSubDetailTodoIdAction: (id, onSuccess) => \r\n        dispatch(getDetailSubCategory (id, onSuccess)),\r\n\r\n    dispatchUpdateSubTodoAction: (id, data, onSuccess, onError) => \r\n        dispatch(updateSubCategory(id, data, onSuccess, onError)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormEditSubTodo);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}