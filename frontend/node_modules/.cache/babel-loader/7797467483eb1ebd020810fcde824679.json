{"ast":null,"code":"var _jsxFileName = \"E:\\\\file project\\\\OJT\\\\TodoNew-Frontend\\\\FrontEnd-Todo\\\\frontend\\\\src\\\\pages\\\\editSubTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport { updateSubCategory, getDetailSubCategory } from \"../Redux/actions/subTodoAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FormEditSubTodo(props) {\n  _s();\n\n  const {\n    dispatchGetSubDetailTodoIdAction,\n    todoCategoryID,\n    dispatchUpdateSubTodoAction,\n    history\n  } = props;\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(false);\n  const [activityTitle, setActivityTitle] = useState(\"\");\n  const [priority, setPriority] = useState(\"penting\");\n  const [note, setNote] = useState(\"\");\n\n  const toggle = () => setModal(!modal); // const handleSubmit = (e) => {\n  //     e.preventDefault();\n  //     const SubId = props.todoID;\n  //     const data = {activityTitle,priority,note,todoCategoryID};\n  //     console.log('data',data)\n  //     dispatchUpdateSubTodoAction(data, SubId, () => {\n  //         // toast.success('judul listmu sudah dibuat');\n  //         // history.replace('/detail/:todoCategoryID');     \n  //     }, (message) => toast.error(`Error: ${message}`));\n  // }\n\n\n  const handleEdit = () => {\n    const SubId = props.todoID;\n\n    if (SubId) {\n      dispatchGetSubDetailTodoIdAction(SubId, SubData => {\n        console.log('test', SubData);\n        setActivityTitle(SubData.activityTitle);\n        setPriority(SubData.priority);\n        setNote(SubData.note);\n        setModal(true);\n      });\n      dispatchUpdateSubTodoAction(subId, data, () => {\n        toast.success('sudah diupdate'); // history.replace('/detail/:todoCategoryID')\n      }, message => toast.error(`Error: ${message}`));\n    }\n  };\n\n  const handleSubmit = event => {\n    const subId = props.todoID;\n    event.preventDefault();\n    const data = {\n      activityTitle,\n      priority,\n      note,\n      todoCategoryID\n    };\n    dispatchUpdateSubTodoAction(subId, data, () => {\n      toast.success('sudah diupdate'); // history.replace('/detail/:todoCategoryID')\n    }, message => toast.error(`Error: ${message}`));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      onClick: handleEdit,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modal,\n      toggle: toggle,\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: toggle,\n        children: \"Create Sub Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(ModalBody, {\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"activityTitle\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"title\",\n              id: \"activityTitle\",\n              placeholder: \"with a placeholder\",\n              onChange: e => setActivityTitle(e.target.value),\n              value: activityTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"note\",\n              children: \"Note\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"note\",\n              id: \"note\",\n              placeholder: \"with a placeholder\",\n              onChange: e => setNote(e.target.value),\n              value: note\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"priority\",\n              children: \"Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              value: priority,\n              name: \"priority\",\n              id: \"priority\",\n              onChange: e => setPriority(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"penting\",\n                children: \"Penting\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"gapenting\",\n                children: \"Ga Penting\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            color: \"primary\",\n            onClick: toggle,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"secondary\",\n            onClick: toggle,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FormEditSubTodo, \"n9ToQvcixcMqTAOSimNtz1+Fgow=\");\n\n_c = FormEditSubTodo;\n;\n\nconst mapStateToProps = state => ({\n  subTodoCategory: state.subTodoList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchGetSubDetailTodoIdAction: (id, onSuccess) => dispatch(getDetailSubCategory(id, onSuccess)),\n  dispatchUpdateSubTodoAction: (id, data, onSuccess, onError) => dispatch(updateSubCategory(id, data, onSuccess, onError))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormEditSubTodo);\n\nvar _c;\n\n$RefreshReg$(_c, \"FormEditSubTodo\");","map":{"version":3,"sources":["E:/file project/OJT/TodoNew-Frontend/FrontEnd-Todo/frontend/src/pages/editSubTodo.js"],"names":["React","useState","connect","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","toast","updateSubCategory","getDetailSubCategory","FormEditSubTodo","props","dispatchGetSubDetailTodoIdAction","todoCategoryID","dispatchUpdateSubTodoAction","history","className","modal","setModal","activityTitle","setActivityTitle","priority","setPriority","note","setNote","toggle","handleEdit","SubId","todoID","SubData","console","log","subId","data","success","message","error","handleSubmit","event","preventDefault","e","target","value","mapStateToProps","state","subTodoCategory","subTodoList","mapDispatchToProps","dispatch","id","onSuccess","onError"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport {toast} from 'react-toastify'\r\nimport { updateSubCategory, getDetailSubCategory } from \"../Redux/actions/subTodoAction\";\r\n\r\n\r\nfunction FormEditSubTodo(props){\r\n    const {dispatchGetSubDetailTodoIdAction,\r\n        todoCategoryID,dispatchUpdateSubTodoAction, history} = props;\r\n    const {\r\n        className\r\n    } = props;\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [activityTitle,setActivityTitle] = useState(\"\")\r\n    const [priority, setPriority] = useState(\"penting\")\r\n    const [note, setNote] = useState(\"\")\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    // const handleSubmit = (e) => {\r\n    //     e.preventDefault();\r\n    //     const SubId = props.todoID;\r\n    //     const data = {activityTitle,priority,note,todoCategoryID};\r\n    //     console.log('data',data)\r\n    //     dispatchUpdateSubTodoAction(data, SubId, () => {\r\n    //         // toast.success('judul listmu sudah dibuat');\r\n    //         // history.replace('/detail/:todoCategoryID');     \r\n    //     }, (message) => toast.error(`Error: ${message}`));\r\n    // }\r\n\r\n    const handleEdit = () => {\r\n        const SubId = props.todoID;\r\n        if(SubId){\r\n            dispatchGetSubDetailTodoIdAction(SubId, SubData =>{\r\n                console.log('test',SubData)\r\n                setActivityTitle(SubData.activityTitle)\r\n                setPriority(SubData.priority)\r\n                setNote(SubData.note)\r\n                setModal(true);\r\n            });\r\n            dispatchUpdateSubTodoAction(subId, data, () => {\r\n                toast.success('sudah diupdate');\r\n                // history.replace('/detail/:todoCategoryID')\r\n            }, (message) => toast.error(`Error: ${message}`) )\r\n        }\r\n    }\r\n    \r\n    const handleSubmit = event => {\r\n        const subId = props.todoID;\r\n        event.preventDefault();\r\n        const data = {activityTitle, priority,note, todoCategoryID};\r\n        dispatchUpdateSubTodoAction(subId, data, () => {\r\n            toast.success('sudah diupdate');\r\n            // history.replace('/detail/:todoCategoryID')\r\n        }, (message) => toast.error(`Error: ${message}`) )\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Button color=\"primary\" onClick={handleEdit}>\r\n            Edit\r\n        </Button>\r\n        <Modal isOpen={modal} toggle={toggle} className={className}>\r\n            <ModalHeader toggle={toggle}>Create Sub Todo</ModalHeader>\r\n            <Form onSubmit={handleSubmit}>\r\n            <ModalBody>\r\n                <FormGroup>\r\n                    <Label for=\"activityTitle\">Title</Label>\r\n                    <Input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    id=\"activityTitle\"\r\n                    placeholder=\"with a placeholder\"\r\n                    onChange={(e) => setActivityTitle(e.target.value)}\r\n                    value={activityTitle}\r\n                    />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label for=\"note\">Note</Label>\r\n                    <Input\r\n                    type=\"text\"\r\n                    name=\"note\"\r\n                    id=\"note\"\r\n                    placeholder=\"with a placeholder\"\r\n                    onChange={(e) => setNote(e.target.value)}\r\n                    value={note}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"priority\">Priority</Label>\r\n                        <Input type=\"select\" value={priority} name=\"priority\" id=\"priority\" onChange={(e) => setPriority(e.target.value)} >\r\n                        <option value=\"penting\">Penting</option>\r\n                        <option value=\"gapenting\">Ga Penting</option>\r\n                    </Input>\r\n                </FormGroup>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button type=\"submit\" color=\"primary\" onClick={toggle}>\r\n                    Save\r\n                </Button>\r\n                <Button color=\"secondary\" onClick={toggle}>\r\n                    Cancel\r\n                </Button>\r\n            </ModalFooter>\r\n            </Form>\r\n        </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    subTodoCategory : state.subTodoList,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dispatchGetSubDetailTodoIdAction: (id, onSuccess) => \r\n        dispatch(getDetailSubCategory (id, onSuccess)),\r\n    dispatchUpdateSubTodoAction: (id, data, onSuccess, onError) => \r\n        dispatch(updateSubCategory(id, data, onSuccess, onError)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormEditSubTodo);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}