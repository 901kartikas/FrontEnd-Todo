{"ast":null,"code":"var _jsxFileName = \"E:\\\\file project\\\\OJT\\\\TodoNew-Frontend\\\\FrontEnd-Todo\\\\frontend\\\\src\\\\pages\\\\editTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getCategoryId, updateCategoryId } from \"../Redux/actions/todolistAction\";\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditTodo = ({\n  dispatchGetTodoIdAction,\n  match,\n  dispatchUpdateTodoAction,\n  history\n}) => {\n  _s();\n\n  const [categoryTitle, setCategoryTitle] = useState(\"\");\n  useEffect(() => {\n    const {\n      id\n    } = match.params;\n\n    if (id) {\n      dispatchGetTodoIdAction(id, ({\n        categoryTitle\n      }) => {\n        setCategoryTitle(categoryTitle);\n      });\n    }\n  }, [dispatchGetTodoIdAction, match.params]);\n\n  const handleOnSubmit = event => {\n    const {\n      id\n    } = match.params;\n    event.preventDefault();\n    const data = {\n      categoryTitle\n    };\n    dispatchUpdateTodoAction(id, data, () => {\n      toast.success('sudah diupdate');\n      history.replace('/form');\n    }, message => toast.error(`Error : ${message}`));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row align-items-center \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            onSubmit: handleOnSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"categoryTitle\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                noValidate: true,\n                id: \"categoryTitle\",\n                placeholder: \"judul\",\n                type: \"text\",\n                name: \"categoryTitle\",\n                value: categoryTitle,\n                onChange: e => setCategoryTitle(e.target.value),\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditTodo, \"H/f5dYjihfZHq3IiTzv2qcnyntc=\");\n\n_c = EditTodo;\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchUpdateTodoAction: (id, data, onSuccess, onError) => dispatch(updateCategoryId(id, data, onSuccess, onError)),\n  dispatchGetTodoIdAction: (id, onSuccess) => dispatch(getCategoryId(id, onSuccess))\n});\n\nexport default connect(null, mapDispatchToProps)(EditTodo);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTodo\");","map":{"version":3,"sources":["E:/file project/OJT/TodoNew-Frontend/FrontEnd-Todo/frontend/src/pages/editTodo.js"],"names":["React","useState","useEffect","connect","getCategoryId","updateCategoryId","toast","EditTodo","dispatchGetTodoIdAction","match","dispatchUpdateTodoAction","history","categoryTitle","setCategoryTitle","id","params","handleOnSubmit","event","preventDefault","data","success","replace","message","error","e","target","value","mapDispatchToProps","dispatch","onSuccess","onError"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {getCategoryId, updateCategoryId } from \"../Redux/actions/todolistAction\";\r\nimport {toast} from 'react-toastify'\r\n\r\n\r\nconst EditTodo = ({ dispatchGetTodoIdAction, match, dispatchUpdateTodoAction,history }) => {\r\n  \r\n  const [categoryTitle, setCategoryTitle] = useState(\"\");\r\n\r\n\r\n  useEffect(()=> {\r\n    const {id} = match.params;\r\n    if(id){\r\n      dispatchGetTodoIdAction(id, ({categoryTitle}) =>\r\n      {\r\n        setCategoryTitle(categoryTitle);\r\n      });\r\n    }\r\n  }, [dispatchGetTodoIdAction, match.params])\r\n\r\n\r\n  const handleOnSubmit = event => {\r\n    const {id} = match.params;\r\n    event.preventDefault();\r\n    const data = {categoryTitle};\r\n    dispatchUpdateTodoAction(id, data, () => {\r\n         toast.success('sudah diupdate');\r\n         history.replace('/form');\r\n    }, (message) => toast.error(`Error : ${message}`));\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <div className=\"container-sm\">\r\n         <div className=\"row\">\r\n        <div className=\"col\">\r\n       \r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row align-items-center \">\r\n        <div className=\"col-md-6\" >\r\n          <form noValidate onSubmit={handleOnSubmit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"categoryTitle\">Title</label>\r\n              <input\r\n                noValidate\r\n                id=\"categoryTitle\"\r\n                placeholder=\"judul\"\r\n                type=\"text\"\r\n                name=\"categoryTitle\"\r\n                value={categoryTitle}\r\n                onChange={(e) => setCategoryTitle(e.target.value)}\r\n                className=\"form-control\"\r\n              />\r\n              \r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n     \r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatchUpdateTodoAction: (id, data, onSuccess, onError) => \r\n    dispatch(updateCategoryId(id, data, onSuccess, onError)),\r\n    \r\n  dispatchGetTodoIdAction: (id, onSuccess) => \r\n    dispatch(getCategoryId(id, onSuccess))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(EditTodo);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}