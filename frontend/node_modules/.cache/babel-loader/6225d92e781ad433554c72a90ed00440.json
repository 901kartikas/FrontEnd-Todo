{"ast":null,"code":"var _jsxFileName = \"E:\\\\file project\\\\OJT\\\\TodoNew-Frontend\\\\FrontEnd-Todo\\\\frontend\\\\src\\\\pages\\\\editSubTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport { updateSubCategory, getCategoryById } from \"../Redux/actions/subTodoAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditTodo = ({\n  dispatchGetTodoIdAction,\n  match,\n  dispatchUpdateSubTodoAction,\n  history\n}) => {\n  _s();\n\n  const [categoryTitle, setCategoryTitle] = useState(\"\");\n  useEffect(() => {\n    console.log(match);\n    const {\n      id\n    } = match.params;\n\n    if (id) {\n      dispatchGetTodoIdAction(id, ({}) => {\n        setCategoryTitle(categoryTitle);\n      });\n    }\n  }, [dispatchGetTodoIdAction, match.params]);\n\n  const handleOnSubmit = event => {\n    const {\n      id\n    } = match.params;\n    event.preventDefault();\n    const data = {\n      categoryTitle\n    };\n    dispatchUpdateSubTodoAction(id, data, () => {\n      toast.success('sudah diupdate');\n    }, message => toast.error(`Error : ${message}`));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add Todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row align-items-center \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            onSubmit: handleOnSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"categoryTitle\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                noValidate: true,\n                id: \"categoryTitle\",\n                placeholder: \"judul\",\n                type: \"text\",\n                name: \"categoryTitle\",\n                value: categoryTitle,\n                onChange: e => setCategoryTitle(e.target.value),\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-5\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary mr-2 btn-md\",\n                  children: [\"save | \", /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 30\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => history.replace(\"/form\"),\n                  className: \"btn btn-secondary ml-5 btn-md\",\n                  children: [\"cancel | \", /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-times\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 32\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n};\n\n_s(EditTodo, \"H/f5dYjihfZHq3IiTzv2qcnyntc=\");\n\n_c = EditTodo;\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchUpdateSubTodoAction: (id, data, onSuccess, onError) => dispatch(updateSubCategory(id, data, onSuccess, onError)),\n  dispatchGetSubTodoIdAction: (id, onSuccess) => dispatch(getCategoryById(id, onSuccess))\n});\n\nexport default connect(null, mapDispatchToProps)(EditTodo);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTodo\");","map":{"version":3,"sources":["E:/file project/OJT/TodoNew-Frontend/FrontEnd-Todo/frontend/src/pages/editSubTodo.js"],"names":["React","useState","useEffect","connect","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","toast","updateSubCategory","getCategoryById","EditTodo","dispatchGetTodoIdAction","match","dispatchUpdateSubTodoAction","history","categoryTitle","setCategoryTitle","console","log","id","params","handleOnSubmit","event","preventDefault","data","success","message","error","e","target","value","replace","mapDispatchToProps","dispatch","onSuccess","onError","dispatchGetSubTodoIdAction"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport {toast} from 'react-toastify'\r\nimport { updateSubCategory, getCategoryById} from \"../Redux/actions/subTodoAction\";\r\n\r\n\r\n\r\n\r\nconst EditTodo = ({ dispatchGetTodoIdAction, match, dispatchUpdateSubTodoAction,history }) => {\r\n  \r\n    const [categoryTitle, setCategoryTitle] = useState(\"\");\r\n  \r\n  \r\n    useEffect(()=> {\r\n      console.log(match);\r\n      const {id} = match.params;\r\n      if(id){\r\n        dispatchGetTodoIdAction(id, ({}) =>\r\n        {\r\n          setCategoryTitle(categoryTitle);\r\n        });\r\n      }\r\n    }, [dispatchGetTodoIdAction, match.params])\r\n  \r\n  \r\n    const handleOnSubmit = event => {\r\n      const {id} = match.params;\r\n      event.preventDefault();\r\n      const data = {categoryTitle};\r\n      dispatchUpdateSubTodoAction(id, data, () => {\r\n           toast.success('sudah diupdate');\r\n      }, (message) => toast.error(`Error : ${message}`));\r\n  }\r\n  \r\n  \r\n    return (\r\n      <React.Fragment>\r\n      <div className=\"container-sm\">\r\n           <div className=\"row\">\r\n          <div className=\"col\">\r\n            <h3>Add Todo</h3>\r\n          </div>\r\n        </div>\r\n  \r\n        <div className=\"row align-items-center \">\r\n          <div className=\"col-md-6\" >\r\n            <form noValidate onSubmit={handleOnSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"categoryTitle\">Title</label>\r\n                <input\r\n                  noValidate\r\n                  id=\"categoryTitle\"\r\n                  placeholder=\"judul\"\r\n                  type=\"text\"\r\n                  name=\"categoryTitle\"\r\n                  value={categoryTitle}\r\n                  onChange={(e) => setCategoryTitle(e.target.value)}\r\n                  className=\"form-control\"\r\n                />\r\n                <div className=\"mt-5\">\r\n                  <button type=\"submit\" className=\"btn btn-primary mr-2 btn-md\">\r\n                      save | <i className=\"fas fa-save\"></i>\r\n                  </button>\r\n                  <button type=\"button\" onClick={() => history.replace(\"/form\")}  className=\"btn btn-secondary ml-5 btn-md\">\r\n                      cancel | <i className=\"fas fa-times\"></i>\r\n                  </button>\r\n              </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n       \r\n      </React.Fragment>\r\n    );\r\n  };\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n    dispatchUpdateSubTodoAction: (id, data, onSuccess, onError) => \r\n      dispatch(updateSubCategory(id, data, onSuccess, onError)),\r\n      \r\n        dispatchGetSubTodoIdAction: (id, onSuccess) => \r\n    dispatch(getCategoryById(id, onSuccess)),\r\n  });\r\n  \r\n  export default connect(null, mapDispatchToProps)(EditTodo);\r\n  \r\n  \r\n  \r\n  "]},"metadata":{},"sourceType":"module"}