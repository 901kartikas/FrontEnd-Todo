{"ast":null,"code":"var _jsxFileName = \"E:\\\\file project\\\\OJT\\\\TodoNew-Frontend\\\\frontend\\\\frontend\\\\src\\\\components\\\\loginComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { toast } from 'react-toastify';\nimport { loginUser } from \"../Redux/actions/authAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginComponent = ({\n  dispatchLoginAction\n}) => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState({\n    username: false,\n    password: false\n  });\n\n  const handleSubmit = event => {\n    console.log(username, password);\n    event.preventDefault();\n    if (isFormInvalid()) updateError();else dispatchLoginAction(username, password, () => toast.success(\"udah login thx\"), message => toast.error(`Error: ${message}`));\n  };\n\n  const isFormInvalid = () => !username || !password;\n\n  const updateError = () => {\n    const errObj = {\n      username: false,\n      password: false\n    };\n    if (!username.trim()) errObj.username = true;\n    if (!password.trim()) errObj.password = true;\n    setError(errObj);\n  };\n\n  const handleCancle = event => {\n    event.preventDefault();\n    setUsername('');\n    setPassword('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3 row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            className: \"col-sm-2 col-form-label\",\n            children: \"User Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-10\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              name: \"username\",\n              value: username,\n              onChange: e => setUsername(e.target.value),\n              className: `form-control ${error.username ? 'is-invalid' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"invalid-feedback\",\n              children: \" Ini tolong diisi \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3 row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"col-sm-2 col-form-label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-10\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              className: `form-control ${error.password ? 'is-invalid' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"invalid-feedback\",\n              children: \" Ini tolong diisi \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n\n_s(LoginComponent, \"mck/AdETZT2GIqiBn6fiew/ufFs=\");\n\n_c = LoginComponent;\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchLoginAction: (username, password, onSuccess, onError) => dispatch(loginUser({\n    username,\n    password\n  }, onSuccess, onError))\n});\n\nexport default connect(null, mapDispatchToProps)(LoginComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginComponent\");","map":{"version":3,"sources":["E:/file project/OJT/TodoNew-Frontend/frontend/frontend/src/components/loginComponent.js"],"names":["React","useState","connect","toast","loginUser","LoginComponent","dispatchLoginAction","username","setUsername","password","setPassword","error","setError","handleSubmit","event","console","log","preventDefault","isFormInvalid","updateError","success","message","errObj","trim","handleCancle","e","target","value","mapDispatchToProps","dispatch","onSuccess","onError"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {toast} from 'react-toastify';\r\nimport { loginUser } from \"../Redux/actions/authAction\";\r\n\r\n\r\n\r\n\r\n\r\nconst LoginComponent = ({dispatchLoginAction}) => {\r\n  \r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('') \r\n  const [error, setError] = useState({username: false, password: false});\r\n\r\n  const handleSubmit = (event) => {\r\n    console.log(username, password)\r\n    event.preventDefault();\r\n    if(isFormInvalid()) updateError();\r\n    else dispatchLoginAction(username, password, \r\n        () => toast.success(\"udah login thx\"),\r\n        (message) => toast.error(`Error: ${message}`));\r\n  };\r\n\r\n  const isFormInvalid = () => (!username || !password);\r\n\r\n  const updateError = () => {\r\n    const errObj = {username: false, password:false};\r\n    if(!username.trim()) errObj.username = true;\r\n    if(!password.trim()) errObj.password = true;\r\n    setError(errObj);\r\n  };\r\n\r\n  const handleCancle = event => {\r\n      event.preventDefault();\r\n      setUsername('');\r\n      setPassword('');\r\n  } \r\n\r\n    return (\r\n      <div>\r\n        <React.Fragment>\r\n          <form noValidate onSubmit={handleSubmit}>\r\n          <div className=\"mb-3 row\">\r\n            <label htmlFor=\"username\" className=\"col-sm-2 col-form-label\">\r\n              User Name\r\n            </label>\r\n            <div className=\"col-sm-10\">\r\n              <input\r\n                type=\"text\"\r\n                id=\"username\"\r\n                name=\"username\"\r\n                value={username}\r\n                onChange = {(e) => setUsername(e.target.value)}\r\n                className={`form-control ${error.username ? 'is-invalid':''}` }\r\n              />\r\n              <p className=\"invalid-feedback\"> Ini tolong diisi </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"mb-3 row\">\r\n            <label htmlFor=\"password\" className=\"col-sm-2 col-form-label\">\r\n              Password\r\n            </label>\r\n            <div className=\"col-sm-10\">\r\n              <input type=\"password\"\r\n              id=\"password\" \r\n              name=\"password\"\r\n              value={password}\r\n              onChange = {(e) => setPassword(e.target.value)}\r\n              className={`form-control ${error.password ? 'is-invalid':''}` }\r\n              />\r\n              <p className=\"invalid-feedback\"> Ini tolong diisi </p>\r\n            </div>\r\n           \r\n          </div>\r\n          <button type=\"submit\">\r\n              Login\r\n          </button>\r\n          </form>\r\n        </React.Fragment>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  dispatchLoginAction: (username, password, onSuccess, onError) =>\r\n      dispatch(loginUser({username, password}, onSuccess, onError))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginComponent);"]},"metadata":{},"sourceType":"module"}